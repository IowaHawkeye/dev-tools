
cd ~
rm -rf Documents
rm -rf Music
rm -rf Pictures
rm -rf Public
rm -rf Templates
rm -rf Videos

sudo apt update
sudo apt install -y vim-gtk3

touch ~/.bash_aliases

#Add the alias to ~/.bash_aliases
alias vi='gvim'

# Make is so sudo doesn't require a password
sudo visudo
#Add the line
dberger ALL=(ALL:ALL) NOPASSWD:ALL

sudo apt install -y curl

sudo apt install -y meld

sudo apt install -y net-tools

sudo apt install -y git

#Configure git
git config --global user.email "dan_r_berger@hotmail.com"
git config --global user.name "IowaHawkeye"

# This also installs automake
sudo apt install autoconf 

sudo apt install -y gcc

sudo apt install -y g++

sudo apt install -y libpcap-dev

sudo apt install -y make

sudo apt install -y subversion

sudo apt install -y python2

sudo apt install -y python3-pip

# Install Chrome
wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
sudo dpkg -i google-chrome-stable_current_amd64.deb

Create a Shared file.

In Windows

Create C:\Users\danb\Shared

In Virtual Box
Before Starting the VM Selected "Shared Folders" and Add New Shared Folder

For "Folder Path" put "C:\Users\danb\Shared"

For "Folder Name" put "Shared"

Select "Make Permanent"


Start the VM and then at the top Menu select "Devices" -> "Insert Guest
Additions CD Image..."

This will start and install Guest Additions.  It will prompt for the root
password.

After installation add the following line to the fstab


Shared  /home/dberger/Shared vboxsf defaults,uid=1000,gid=1000 0  0

mkdir -p /home/dberger/Shared

sudo adduser dberger vsboxsf

Restart VM


Disable Screen Lock
"Settings"->"Power"->Blank Screen" set to "Never"

Create Some Capture directories for logs and screenshots
mkdir -p Captures/Screenshots
mkdir -p Captures/Logs

Change the gnome-printscreen to $HOME/Captures/Screenshots
gsettings set org.gnome.gnome-screenshot auto-save-directory
"file:///home/$USER/Captures/Screenshots"

The Go to Settings->Keyboard Shortcuts and disable "Save a screenshot of a
window to dberger", "Save a screenshot to dberger" and "Save a screenshot of
an area to dberger"

Note: To disable them click each and in the "Set Shortcut" type a backspace.

Then scroll to the bottom and Create three new Shortcuts:

"Save an area screenshot to $HOME/Captures/Screenshots"
gnome-screenshot -a
Shift+Print

"Save a screenshot to $HOME/Captures/Screenshots"
gnome-screenshot
Print

"Save a window screenshot to $HOME/Captures/Screenshots"
gnome-screenshot -w
Alt+Print

# Display Apport (this is the app the reports system crashes)
sudo vi /etc/default/apport
change enable from 1 to 0

Setup Docker
# Update the apt package index and install packages to allow apt to use a repository over HTTPS
sudo apt-get update
sudo apt-get install ca-certificates curl gnupg lsb-release

# Add Docker's official GPG key
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
 
# Setup the "stable" Docker apt repository
echo   "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# Install Docker engine
sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io

# Verify Docker is installed correctly using the hello-world image
sudo docker run hello-world

# Install CA certificate for our internal docker image registry
sudo mkdir -p /etc/docker/certs.d/yocto-mirror.apconnet.apcon.com:5000
sudo wget -O /etc/docker/certs.d/yocto-mirror.apconnet.apcon.com:5000/ca.crt http://yocto-mirror.apconnet.apcon.com/dockerRegistry.crt
sudo cp /etc/docker/certs.d/yocto-mirror.apconnet.apcon.com:5000/ca.crt /usr/local/share/ca-certificates/yocto-mirror.apconnet.apcon.com.crt
sudo update-ca-certificates

# Verify internal registry
sudo docker run yocto-mirror.apconnet.apcon.com:5000/hello-apcon
 
# Add yourself to the docker group so you don't have to use sudo every time you run an image
sudo usermod -aG docker $USER
 
# You will need to logout or reboot for the group cache to be updated.


cd ~
git clone -b v6.1.0 git@github.com:universal-ctags/ctags
cd ctags
./autogen.sh
./configure
make
sudo make install
cd /home/dberger/workspace/br/4K_TRUNK
ctags -R --c++-kinds=+p --fields=+iaS --extra=+qf /home/dberger/workspace/br/4K_TRUNK


